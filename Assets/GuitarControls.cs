//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/GuitarControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GuitarControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GuitarControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GuitarControls"",
    ""maps"": [
        {
            ""name"": ""Guitar"",
            ""id"": ""b4894d27-c680-4bfa-85d0-57a088f3210c"",
            ""actions"": [
                {
                    ""name"": ""NextPage"",
                    ""type"": ""Button"",
                    ""id"": ""369e0d6a-ebd3-45d0-8d44-d30993d99042"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrevPage"",
                    ""type"": ""Button"",
                    ""id"": ""91ce71cb-93dd-456e-88c7-d509ee9d95b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Chord_A"",
                    ""type"": ""Button"",
                    ""id"": ""04216474-76aa-4909-9e12-04e302da9797"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Chord_B"",
                    ""type"": ""Button"",
                    ""id"": ""03d064fd-ddff-465f-b85c-3525ff0b0405"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Chord_C"",
                    ""type"": ""Button"",
                    ""id"": ""fa4c3b30-e7c6-4dde-b6c5-850c97357253"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Chord_D"",
                    ""type"": ""Button"",
                    ""id"": ""6ed29bfd-3b6e-4d7e-94d9-2317ca2e2b60"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Chord_E"",
                    ""type"": ""Button"",
                    ""id"": ""841ceba3-5a5e-46df-b320-ec1333d03fbc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Chord_F"",
                    ""type"": ""Button"",
                    ""id"": ""7bba13d8-6462-4234-9374-0e6190865b20"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TouchPosition"",
                    ""type"": ""Value"",
                    ""id"": ""7fb7e974-ecbb-4a22-901e-f11aaa7019b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TouchContact"",
                    ""type"": ""Button"",
                    ""id"": ""14579695-af67-4512-a9b2-9fa8728b493e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""String1"",
                    ""type"": ""Button"",
                    ""id"": ""5332c95a-8236-4e84-b11a-ae6f2749d70d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""String2"",
                    ""type"": ""Button"",
                    ""id"": ""063a484a-1e11-4a58-ad12-0b7ab086e16e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""String3"",
                    ""type"": ""Button"",
                    ""id"": ""b8ad97de-e245-42e9-b9ba-9e234a4e8060"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""String4"",
                    ""type"": ""Button"",
                    ""id"": ""27258394-4940-4885-94ce-f5cd9c4019fc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""String5"",
                    ""type"": ""Button"",
                    ""id"": ""fb6d226b-8c45-4370-8fc9-96d03cd9e616"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""String6"",
                    ""type"": ""Button"",
                    ""id"": ""4b029d2f-3d3b-4d82-b13b-441b725f7ccf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Strum"",
                    ""type"": ""Button"",
                    ""id"": ""2042b385-bb2d-4fa4-96bc-6e977bd4d2e0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightStickX"",
                    ""type"": ""Value"",
                    ""id"": ""16f05a44-1bca-4ab1-bb16-8d6d2adb950a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightStickY"",
                    ""type"": ""Value"",
                    ""id"": ""ec4bb03d-4d63-4c6a-b8c9-30cd55804d0b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2759fa02-527c-4d6b-8493-d30ae72de508"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""NextPage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d756a4b0-e766-4035-9336-f2e1d52cab08"",
                    ""path"": ""<DualShockGamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextPage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15c36784-0311-4b81-ba37-3b901af38761"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""PrevPage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd1b6cd1-af5f-4696-be92-78558ff3acda"",
                    ""path"": ""<DualShockGamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrevPage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a4877743-5746-48f5-8738-4e34edb669da"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Chord_A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d5527eb-efb2-405f-b434-fb60ca1ee333"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Chord_C"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aba79493-4066-4db4-b4b4-aaeee6f71263"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Chord_D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b1df623-619a-4814-9169-500b5b6f5175"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Chord_E"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7134f551-5e5c-425f-ae20-9509f9764271"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Chord_F"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""915f89ee-5d93-41ee-a33e-952b67b573bc"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Chord_B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""48a290cb-15fd-45a5-8fde-06fdf0ad744b"",
                    ""path"": ""<DualShockGamepad>/touchpadButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""TouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6af815be-ef80-474a-9581-c071dc19742b"",
                    ""path"": ""<DualShockGamepad>/touchpadButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""TouchContact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7dbf6118-a722-498b-a077-d19a797f3a8a"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""String1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0d1ec15-6977-4458-ad3c-d016526753ed"",
                    ""path"": ""<DualShockGamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""String1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd1f1b30-b491-4f4f-ae28-695a3afab1af"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""String2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""949f8004-2f4a-4422-a0c8-ede515f1af81"",
                    ""path"": ""<DualShockGamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""String2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b165925a-3c19-47e7-af04-d8f59a6369e7"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""String3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81263d5a-3f2e-4183-ba1b-335ea221a257"",
                    ""path"": ""<DualShockGamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""String3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da32af77-1a06-4a75-b6b9-69d77e133741"",
                    ""path"": ""<DualShockGamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""String4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13f77bec-6d91-4b14-8438-aab922edcab0"",
                    ""path"": ""<DualShockGamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""String5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""168132aa-0ae9-4109-ba70-820ad3943418"",
                    ""path"": ""<DualShockGamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""String6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e6ce2e2-2943-4786-b065-1dbce64550c9"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Strum"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c4931ef-e56d-48f2-83b1-61334930598b"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strum"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1511e211-c4aa-472c-9153-c2a79fc8ee30"",
                    ""path"": ""<DualShockGamepad>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""RightStickX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b25ae803-2a27-4275-a10d-48580c089bb7"",
                    ""path"": ""<Gamepad>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightStickY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Guitar
        m_Guitar = asset.FindActionMap("Guitar", throwIfNotFound: true);
        m_Guitar_NextPage = m_Guitar.FindAction("NextPage", throwIfNotFound: true);
        m_Guitar_PrevPage = m_Guitar.FindAction("PrevPage", throwIfNotFound: true);
        m_Guitar_Chord_A = m_Guitar.FindAction("Chord_A", throwIfNotFound: true);
        m_Guitar_Chord_B = m_Guitar.FindAction("Chord_B", throwIfNotFound: true);
        m_Guitar_Chord_C = m_Guitar.FindAction("Chord_C", throwIfNotFound: true);
        m_Guitar_Chord_D = m_Guitar.FindAction("Chord_D", throwIfNotFound: true);
        m_Guitar_Chord_E = m_Guitar.FindAction("Chord_E", throwIfNotFound: true);
        m_Guitar_Chord_F = m_Guitar.FindAction("Chord_F", throwIfNotFound: true);
        m_Guitar_TouchPosition = m_Guitar.FindAction("TouchPosition", throwIfNotFound: true);
        m_Guitar_TouchContact = m_Guitar.FindAction("TouchContact", throwIfNotFound: true);
        m_Guitar_String1 = m_Guitar.FindAction("String1", throwIfNotFound: true);
        m_Guitar_String2 = m_Guitar.FindAction("String2", throwIfNotFound: true);
        m_Guitar_String3 = m_Guitar.FindAction("String3", throwIfNotFound: true);
        m_Guitar_String4 = m_Guitar.FindAction("String4", throwIfNotFound: true);
        m_Guitar_String5 = m_Guitar.FindAction("String5", throwIfNotFound: true);
        m_Guitar_String6 = m_Guitar.FindAction("String6", throwIfNotFound: true);
        m_Guitar_Strum = m_Guitar.FindAction("Strum", throwIfNotFound: true);
        m_Guitar_RightStickX = m_Guitar.FindAction("RightStickX", throwIfNotFound: true);
        m_Guitar_RightStickY = m_Guitar.FindAction("RightStickY", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Guitar
    private readonly InputActionMap m_Guitar;
    private List<IGuitarActions> m_GuitarActionsCallbackInterfaces = new List<IGuitarActions>();
    private readonly InputAction m_Guitar_NextPage;
    private readonly InputAction m_Guitar_PrevPage;
    private readonly InputAction m_Guitar_Chord_A;
    private readonly InputAction m_Guitar_Chord_B;
    private readonly InputAction m_Guitar_Chord_C;
    private readonly InputAction m_Guitar_Chord_D;
    private readonly InputAction m_Guitar_Chord_E;
    private readonly InputAction m_Guitar_Chord_F;
    private readonly InputAction m_Guitar_TouchPosition;
    private readonly InputAction m_Guitar_TouchContact;
    private readonly InputAction m_Guitar_String1;
    private readonly InputAction m_Guitar_String2;
    private readonly InputAction m_Guitar_String3;
    private readonly InputAction m_Guitar_String4;
    private readonly InputAction m_Guitar_String5;
    private readonly InputAction m_Guitar_String6;
    private readonly InputAction m_Guitar_Strum;
    private readonly InputAction m_Guitar_RightStickX;
    private readonly InputAction m_Guitar_RightStickY;
    public struct GuitarActions
    {
        private @GuitarControls m_Wrapper;
        public GuitarActions(@GuitarControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @NextPage => m_Wrapper.m_Guitar_NextPage;
        public InputAction @PrevPage => m_Wrapper.m_Guitar_PrevPage;
        public InputAction @Chord_A => m_Wrapper.m_Guitar_Chord_A;
        public InputAction @Chord_B => m_Wrapper.m_Guitar_Chord_B;
        public InputAction @Chord_C => m_Wrapper.m_Guitar_Chord_C;
        public InputAction @Chord_D => m_Wrapper.m_Guitar_Chord_D;
        public InputAction @Chord_E => m_Wrapper.m_Guitar_Chord_E;
        public InputAction @Chord_F => m_Wrapper.m_Guitar_Chord_F;
        public InputAction @TouchPosition => m_Wrapper.m_Guitar_TouchPosition;
        public InputAction @TouchContact => m_Wrapper.m_Guitar_TouchContact;
        public InputAction @String1 => m_Wrapper.m_Guitar_String1;
        public InputAction @String2 => m_Wrapper.m_Guitar_String2;
        public InputAction @String3 => m_Wrapper.m_Guitar_String3;
        public InputAction @String4 => m_Wrapper.m_Guitar_String4;
        public InputAction @String5 => m_Wrapper.m_Guitar_String5;
        public InputAction @String6 => m_Wrapper.m_Guitar_String6;
        public InputAction @Strum => m_Wrapper.m_Guitar_Strum;
        public InputAction @RightStickX => m_Wrapper.m_Guitar_RightStickX;
        public InputAction @RightStickY => m_Wrapper.m_Guitar_RightStickY;
        public InputActionMap Get() { return m_Wrapper.m_Guitar; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GuitarActions set) { return set.Get(); }
        public void AddCallbacks(IGuitarActions instance)
        {
            if (instance == null || m_Wrapper.m_GuitarActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GuitarActionsCallbackInterfaces.Add(instance);
            @NextPage.started += instance.OnNextPage;
            @NextPage.performed += instance.OnNextPage;
            @NextPage.canceled += instance.OnNextPage;
            @PrevPage.started += instance.OnPrevPage;
            @PrevPage.performed += instance.OnPrevPage;
            @PrevPage.canceled += instance.OnPrevPage;
            @Chord_A.started += instance.OnChord_A;
            @Chord_A.performed += instance.OnChord_A;
            @Chord_A.canceled += instance.OnChord_A;
            @Chord_B.started += instance.OnChord_B;
            @Chord_B.performed += instance.OnChord_B;
            @Chord_B.canceled += instance.OnChord_B;
            @Chord_C.started += instance.OnChord_C;
            @Chord_C.performed += instance.OnChord_C;
            @Chord_C.canceled += instance.OnChord_C;
            @Chord_D.started += instance.OnChord_D;
            @Chord_D.performed += instance.OnChord_D;
            @Chord_D.canceled += instance.OnChord_D;
            @Chord_E.started += instance.OnChord_E;
            @Chord_E.performed += instance.OnChord_E;
            @Chord_E.canceled += instance.OnChord_E;
            @Chord_F.started += instance.OnChord_F;
            @Chord_F.performed += instance.OnChord_F;
            @Chord_F.canceled += instance.OnChord_F;
            @TouchPosition.started += instance.OnTouchPosition;
            @TouchPosition.performed += instance.OnTouchPosition;
            @TouchPosition.canceled += instance.OnTouchPosition;
            @TouchContact.started += instance.OnTouchContact;
            @TouchContact.performed += instance.OnTouchContact;
            @TouchContact.canceled += instance.OnTouchContact;
            @String1.started += instance.OnString1;
            @String1.performed += instance.OnString1;
            @String1.canceled += instance.OnString1;
            @String2.started += instance.OnString2;
            @String2.performed += instance.OnString2;
            @String2.canceled += instance.OnString2;
            @String3.started += instance.OnString3;
            @String3.performed += instance.OnString3;
            @String3.canceled += instance.OnString3;
            @String4.started += instance.OnString4;
            @String4.performed += instance.OnString4;
            @String4.canceled += instance.OnString4;
            @String5.started += instance.OnString5;
            @String5.performed += instance.OnString5;
            @String5.canceled += instance.OnString5;
            @String6.started += instance.OnString6;
            @String6.performed += instance.OnString6;
            @String6.canceled += instance.OnString6;
            @Strum.started += instance.OnStrum;
            @Strum.performed += instance.OnStrum;
            @Strum.canceled += instance.OnStrum;
            @RightStickX.started += instance.OnRightStickX;
            @RightStickX.performed += instance.OnRightStickX;
            @RightStickX.canceled += instance.OnRightStickX;
            @RightStickY.started += instance.OnRightStickY;
            @RightStickY.performed += instance.OnRightStickY;
            @RightStickY.canceled += instance.OnRightStickY;
        }

        private void UnregisterCallbacks(IGuitarActions instance)
        {
            @NextPage.started -= instance.OnNextPage;
            @NextPage.performed -= instance.OnNextPage;
            @NextPage.canceled -= instance.OnNextPage;
            @PrevPage.started -= instance.OnPrevPage;
            @PrevPage.performed -= instance.OnPrevPage;
            @PrevPage.canceled -= instance.OnPrevPage;
            @Chord_A.started -= instance.OnChord_A;
            @Chord_A.performed -= instance.OnChord_A;
            @Chord_A.canceled -= instance.OnChord_A;
            @Chord_B.started -= instance.OnChord_B;
            @Chord_B.performed -= instance.OnChord_B;
            @Chord_B.canceled -= instance.OnChord_B;
            @Chord_C.started -= instance.OnChord_C;
            @Chord_C.performed -= instance.OnChord_C;
            @Chord_C.canceled -= instance.OnChord_C;
            @Chord_D.started -= instance.OnChord_D;
            @Chord_D.performed -= instance.OnChord_D;
            @Chord_D.canceled -= instance.OnChord_D;
            @Chord_E.started -= instance.OnChord_E;
            @Chord_E.performed -= instance.OnChord_E;
            @Chord_E.canceled -= instance.OnChord_E;
            @Chord_F.started -= instance.OnChord_F;
            @Chord_F.performed -= instance.OnChord_F;
            @Chord_F.canceled -= instance.OnChord_F;
            @TouchPosition.started -= instance.OnTouchPosition;
            @TouchPosition.performed -= instance.OnTouchPosition;
            @TouchPosition.canceled -= instance.OnTouchPosition;
            @TouchContact.started -= instance.OnTouchContact;
            @TouchContact.performed -= instance.OnTouchContact;
            @TouchContact.canceled -= instance.OnTouchContact;
            @String1.started -= instance.OnString1;
            @String1.performed -= instance.OnString1;
            @String1.canceled -= instance.OnString1;
            @String2.started -= instance.OnString2;
            @String2.performed -= instance.OnString2;
            @String2.canceled -= instance.OnString2;
            @String3.started -= instance.OnString3;
            @String3.performed -= instance.OnString3;
            @String3.canceled -= instance.OnString3;
            @String4.started -= instance.OnString4;
            @String4.performed -= instance.OnString4;
            @String4.canceled -= instance.OnString4;
            @String5.started -= instance.OnString5;
            @String5.performed -= instance.OnString5;
            @String5.canceled -= instance.OnString5;
            @String6.started -= instance.OnString6;
            @String6.performed -= instance.OnString6;
            @String6.canceled -= instance.OnString6;
            @Strum.started -= instance.OnStrum;
            @Strum.performed -= instance.OnStrum;
            @Strum.canceled -= instance.OnStrum;
            @RightStickX.started -= instance.OnRightStickX;
            @RightStickX.performed -= instance.OnRightStickX;
            @RightStickX.canceled -= instance.OnRightStickX;
            @RightStickY.started -= instance.OnRightStickY;
            @RightStickY.performed -= instance.OnRightStickY;
            @RightStickY.canceled -= instance.OnRightStickY;
        }

        public void RemoveCallbacks(IGuitarActions instance)
        {
            if (m_Wrapper.m_GuitarActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGuitarActions instance)
        {
            foreach (var item in m_Wrapper.m_GuitarActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GuitarActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GuitarActions @Guitar => new GuitarActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_TouchSchemeIndex = -1;
    public InputControlScheme TouchScheme
    {
        get
        {
            if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
            return asset.controlSchemes[m_TouchSchemeIndex];
        }
    }
    private int m_JoystickSchemeIndex = -1;
    public InputControlScheme JoystickScheme
    {
        get
        {
            if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
            return asset.controlSchemes[m_JoystickSchemeIndex];
        }
    }
    private int m_XRSchemeIndex = -1;
    public InputControlScheme XRScheme
    {
        get
        {
            if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
            return asset.controlSchemes[m_XRSchemeIndex];
        }
    }
    public interface IGuitarActions
    {
        void OnNextPage(InputAction.CallbackContext context);
        void OnPrevPage(InputAction.CallbackContext context);
        void OnChord_A(InputAction.CallbackContext context);
        void OnChord_B(InputAction.CallbackContext context);
        void OnChord_C(InputAction.CallbackContext context);
        void OnChord_D(InputAction.CallbackContext context);
        void OnChord_E(InputAction.CallbackContext context);
        void OnChord_F(InputAction.CallbackContext context);
        void OnTouchPosition(InputAction.CallbackContext context);
        void OnTouchContact(InputAction.CallbackContext context);
        void OnString1(InputAction.CallbackContext context);
        void OnString2(InputAction.CallbackContext context);
        void OnString3(InputAction.CallbackContext context);
        void OnString4(InputAction.CallbackContext context);
        void OnString5(InputAction.CallbackContext context);
        void OnString6(InputAction.CallbackContext context);
        void OnStrum(InputAction.CallbackContext context);
        void OnRightStickX(InputAction.CallbackContext context);
        void OnRightStickY(InputAction.CallbackContext context);
    }
}
